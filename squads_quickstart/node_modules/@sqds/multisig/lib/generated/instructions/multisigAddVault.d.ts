/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { MultisigAddVaultArgs } from '../types/MultisigAddVaultArgs';
/**
 * @category Instructions
 * @category MultisigAddVault
 * @category generated
 */
export type MultisigAddVaultInstructionArgs = {
    args: MultisigAddVaultArgs;
};
/**
 * @category Instructions
 * @category MultisigAddVault
 * @category generated
 */
export declare const multisigAddVaultStruct: beet.FixableBeetArgsStruct<MultisigAddVaultInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _multisigAddVault_ instruction
 *
 * @property [_writable_] multisig
 * @property [**signer**] configAuthority
 * @property [_writable_, **signer**] rentPayer (optional)
 * @category Instructions
 * @category MultisigAddVault
 * @category generated
 */
export type MultisigAddVaultInstructionAccounts = {
    multisig: web3.PublicKey;
    configAuthority: web3.PublicKey;
    rentPayer?: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const multisigAddVaultInstructionDiscriminator: number[];
/**
 * Creates a _MultisigAddVault_ instruction.
 *
 * Optional accounts that are not provided will be omitted from the accounts
 * array passed with the instruction.
 * An optional account that is set cannot follow an optional account that is unset.
 * Otherwise an Error is raised.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category MultisigAddVault
 * @category generated
 */
export declare function createMultisigAddVaultInstruction(accounts: MultisigAddVaultInstructionAccounts, args: MultisigAddVaultInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
