/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { MultisigRemoveSpendingLimitArgs } from '../types/MultisigRemoveSpendingLimitArgs';
/**
 * @category Instructions
 * @category MultisigRemoveSpendingLimit
 * @category generated
 */
export type MultisigRemoveSpendingLimitInstructionArgs = {
    args: MultisigRemoveSpendingLimitArgs;
};
/**
 * @category Instructions
 * @category MultisigRemoveSpendingLimit
 * @category generated
 */
export declare const multisigRemoveSpendingLimitStruct: beet.FixableBeetArgsStruct<MultisigRemoveSpendingLimitInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _multisigRemoveSpendingLimit_ instruction
 *
 * @property [] multisig
 * @property [**signer**] configAuthority
 * @property [_writable_] spendingLimit
 * @property [_writable_] rentCollector
 * @category Instructions
 * @category MultisigRemoveSpendingLimit
 * @category generated
 */
export type MultisigRemoveSpendingLimitInstructionAccounts = {
    multisig: web3.PublicKey;
    configAuthority: web3.PublicKey;
    spendingLimit: web3.PublicKey;
    rentCollector: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const multisigRemoveSpendingLimitInstructionDiscriminator: number[];
/**
 * Creates a _MultisigRemoveSpendingLimit_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category MultisigRemoveSpendingLimit
 * @category generated
 */
export declare function createMultisigRemoveSpendingLimitInstruction(accounts: MultisigRemoveSpendingLimitInstructionAccounts, args: MultisigRemoveSpendingLimitInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
