/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as beetSolana from '@metaplex-foundation/beet-solana';
import { memberBeet } from './Member';
import { periodBeet } from './Period';
export const isConfigActionAddMember = (x) => x.__kind === 'AddMember';
export const isConfigActionRemoveMember = (x) => x.__kind === 'RemoveMember';
export const isConfigActionChangeThreshold = (x) => x.__kind === 'ChangeThreshold';
export const isConfigActionSetTimeLock = (x) => x.__kind === 'SetTimeLock';
export const isConfigActionAddSpendingLimit = (x) => x.__kind === 'AddSpendingLimit';
export const isConfigActionRemoveSpendingLimit = (x) => x.__kind === 'RemoveSpendingLimit';
/**
 * @category userTypes
 * @category generated
 */
export const configActionBeet = beet.dataEnum([
    [
        'AddMember',
        new beet.BeetArgsStruct([['newMember', memberBeet]], 'ConfigActionRecord["AddMember"]'),
    ],
    [
        'RemoveMember',
        new beet.BeetArgsStruct([['oldMember', beetSolana.publicKey]], 'ConfigActionRecord["RemoveMember"]'),
    ],
    [
        'ChangeThreshold',
        new beet.BeetArgsStruct([['newThreshold', beet.u16]], 'ConfigActionRecord["ChangeThreshold"]'),
    ],
    [
        'SetTimeLock',
        new beet.BeetArgsStruct([['newTimeLock', beet.u32]], 'ConfigActionRecord["SetTimeLock"]'),
    ],
    [
        'AddSpendingLimit',
        new beet.FixableBeetArgsStruct([
            ['createKey', beetSolana.publicKey],
            ['vaultIndex', beet.u8],
            ['mint', beetSolana.publicKey],
            ['amount', beet.u64],
            ['period', periodBeet],
            ['members', beet.array(beetSolana.publicKey)],
            ['destinations', beet.array(beetSolana.publicKey)],
        ], 'ConfigActionRecord["AddSpendingLimit"]'),
    ],
    [
        'RemoveSpendingLimit',
        new beet.BeetArgsStruct([['spendingLimit', beetSolana.publicKey]], 'ConfigActionRecord["RemoveSpendingLimit"]'),
    ],
]);
