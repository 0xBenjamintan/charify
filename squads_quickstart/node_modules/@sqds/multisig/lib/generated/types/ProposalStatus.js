/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
export const isProposalStatusDraft = (x) => x.__kind === 'Draft';
export const isProposalStatusActive = (x) => x.__kind === 'Active';
export const isProposalStatusRejected = (x) => x.__kind === 'Rejected';
export const isProposalStatusApproved = (x) => x.__kind === 'Approved';
export const isProposalStatusExecuting = (x) => x.__kind === 'Executing';
export const isProposalStatusExecuted = (x) => x.__kind === 'Executed';
export const isProposalStatusCancelled = (x) => x.__kind === 'Cancelled';
/**
 * @category userTypes
 * @category generated
 */
export const proposalStatusBeet = beet.dataEnum([
    [
        'Draft',
        new beet.BeetArgsStruct([['timestamp', beet.i64]], 'ProposalStatusRecord["Draft"]'),
    ],
    [
        'Active',
        new beet.BeetArgsStruct([['timestamp', beet.i64]], 'ProposalStatusRecord["Active"]'),
    ],
    [
        'Rejected',
        new beet.BeetArgsStruct([['timestamp', beet.i64]], 'ProposalStatusRecord["Rejected"]'),
    ],
    [
        'Approved',
        new beet.BeetArgsStruct([['timestamp', beet.i64]], 'ProposalStatusRecord["Approved"]'),
    ],
    ['Executing', beet.unit],
    [
        'Executed',
        new beet.BeetArgsStruct([['timestamp', beet.i64]], 'ProposalStatusRecord["Executed"]'),
    ],
    [
        'Cancelled',
        new beet.BeetArgsStruct([['timestamp', beet.i64]], 'ProposalStatusRecord["Cancelled"]'),
    ],
]);
