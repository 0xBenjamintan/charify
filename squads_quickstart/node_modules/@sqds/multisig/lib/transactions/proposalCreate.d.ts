import { PublicKey, VersionedTransaction } from "@solana/web3.js";
/**
 * Returns unsigned `VersionedTransaction` that needs to be
 * signed by `member` and `feePayer` before sending it.
 */
export declare function proposalCreate({ blockhash, feePayer, multisigPda, transactionIndex, creator, rentPayer, isDraft, }: {
    blockhash: string;
    feePayer: PublicKey;
    multisigPda: PublicKey;
    transactionIndex: bigint;
    /** Member of the multisig that is creating the proposal. */
    creator: PublicKey;
    /** Payer for the proposal account rent. If not provided, `creator` is used. */
    rentPayer?: PublicKey;
    isDraft?: boolean;
}): VersionedTransaction;
