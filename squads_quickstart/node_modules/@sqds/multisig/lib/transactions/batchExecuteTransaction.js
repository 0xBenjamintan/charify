import { TransactionMessage, VersionedTransaction, } from "@solana/web3.js";
import * as instructions from "../instructions";
/**
 * Returns unsigned `VersionedTransaction` that needs to be
 * signed by `creator` and `feePayer` before sending it.
 */
export async function batchExecuteTransaction({ connection, blockhash, feePayer, multisigPda, member, batchIndex, transactionIndex, }) {
    const { instruction, lookupTableAccounts } = await instructions.batchExecuteTransaction({
        connection,
        multisigPda,
        member,
        batchIndex,
        transactionIndex,
    });
    const message = new TransactionMessage({
        payerKey: feePayer,
        recentBlockhash: blockhash,
        instructions: [instruction],
    }).compileToV0Message(lookupTableAccounts);
    return new VersionedTransaction(message);
}
