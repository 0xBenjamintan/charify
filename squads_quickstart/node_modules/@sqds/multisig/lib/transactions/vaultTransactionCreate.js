import { TransactionMessage, VersionedTransaction, } from "@solana/web3.js";
import * as instructions from "../instructions/index";
/**
 * Returns unsigned `VersionedTransaction` that needs to be
 * signed by `creator`, `rentPayer` and `feePayer` before sending it.
 */
export function vaultTransactionCreate({ blockhash, feePayer, multisigPda, transactionIndex, creator, rentPayer, vaultIndex, ephemeralSigners, transactionMessage, addressLookupTableAccounts, memo, }) {
    const message = new TransactionMessage({
        payerKey: feePayer,
        recentBlockhash: blockhash,
        instructions: [
            instructions.vaultTransactionCreate({
                multisigPda,
                transactionIndex,
                creator,
                rentPayer,
                vaultIndex,
                ephemeralSigners,
                transactionMessage,
                addressLookupTableAccounts,
                memo,
            }),
        ],
    }).compileToV0Message();
    return new VersionedTransaction(message);
}
