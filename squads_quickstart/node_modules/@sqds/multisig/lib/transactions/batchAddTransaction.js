import { TransactionMessage, VersionedTransaction, } from "@solana/web3.js";
import * as instructions from "../instructions";
/**
 * Returns unsigned `VersionedTransaction` that needs to be
 * signed by `creator` and `feePayer` before sending it.
 */
export async function batchAddTransaction({ connection, feePayer, multisigPda, member, rentPayer, vaultIndex, batchIndex, transactionIndex, ephemeralSigners, transactionMessage, addressLookupTableAccounts, }) {
    const blockhash = (await connection.getLatestBlockhash()).blockhash;
    const message = new TransactionMessage({
        payerKey: feePayer,
        recentBlockhash: blockhash,
        instructions: [
            instructions.batchAddTransaction({
                vaultIndex,
                multisigPda,
                member,
                rentPayer,
                batchIndex,
                transactionIndex,
                ephemeralSigners,
                transactionMessage,
                addressLookupTableAccounts,
            }),
        ],
    }).compileToV0Message();
    return new VersionedTransaction(message);
}
