import { AddressLookupTableAccount, Connection, PublicKey, SendOptions, Signer, TransactionMessage, TransactionSignature } from "@solana/web3.js";
/** Add a transaction to a batch. */
export declare function batchAddTransaction({ connection, feePayer, multisigPda, member, rentPayer, vaultIndex, batchIndex, transactionIndex, ephemeralSigners, transactionMessage, addressLookupTableAccounts, signers, sendOptions, }: {
    connection: Connection;
    feePayer: Signer;
    multisigPda: PublicKey;
    /** Member of the multisig that is adding the transaction. */
    member: Signer;
    /** Payer for the transaction account rent. If not provided, `member` is used. */
    rentPayer?: Signer;
    vaultIndex: number;
    batchIndex: bigint;
    transactionIndex: number;
    /** Number of additional signing PDAs required by the transaction. */
    ephemeralSigners: number;
    /** Transaction message to wrap into a batch transaction. */
    transactionMessage: TransactionMessage;
    /** `AddressLookupTableAccount`s referenced in `transaction_message`. */
    addressLookupTableAccounts?: AddressLookupTableAccount[];
    signers?: Signer[];
    sendOptions?: SendOptions;
}): Promise<TransactionSignature>;
