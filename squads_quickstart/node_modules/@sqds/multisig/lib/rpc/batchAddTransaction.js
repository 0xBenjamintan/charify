import * as transactions from "../transactions";
import { translateAndThrowAnchorError } from "../errors";
/** Add a transaction to a batch. */
export async function batchAddTransaction({ connection, feePayer, multisigPda, member, rentPayer, vaultIndex, batchIndex, transactionIndex, ephemeralSigners, transactionMessage, addressLookupTableAccounts, signers, sendOptions, }) {
    const tx = await transactions.batchAddTransaction({
        connection,
        feePayer: feePayer.publicKey,
        multisigPda,
        member: member.publicKey,
        rentPayer: rentPayer?.publicKey ?? member.publicKey,
        vaultIndex,
        batchIndex,
        transactionIndex,
        ephemeralSigners,
        transactionMessage,
        addressLookupTableAccounts,
    });
    const allSigners = [feePayer, member];
    if (signers) {
        allSigners.push(...signers);
    }
    if (rentPayer) {
        allSigners.push(rentPayer);
    }
    tx.sign(allSigners);
    try {
        return await connection.sendTransaction(tx, sendOptions);
    }
    catch (err) {
        translateAndThrowAnchorError(err);
    }
}
