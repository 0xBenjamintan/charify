import { AddressLookupTableAccount, Connection, PublicKey, SendOptions, Signer, TransactionMessage, TransactionSignature } from "@solana/web3.js";
/** Create a new vault transaction. */
export declare function vaultTransactionCreate({ connection, feePayer, multisigPda, transactionIndex, creator, rentPayer, vaultIndex, ephemeralSigners, transactionMessage, addressLookupTableAccounts, memo, signers, sendOptions, }: {
    connection: Connection;
    feePayer: Signer;
    multisigPda: PublicKey;
    transactionIndex: bigint;
    /** Member of the multisig that is creating the transaction. */
    creator: PublicKey;
    /** Payer for the transaction account rent. If not provided, `creator` is used. */
    rentPayer?: PublicKey;
    vaultIndex: number;
    /** Number of ephemeral signing PDAs required by the transaction. */
    ephemeralSigners: number;
    /** Transaction message to wrap into a multisig transaction. */
    transactionMessage: TransactionMessage;
    /** `AddressLookupTableAccount`s referenced in `transaction_message`. */
    addressLookupTableAccounts?: AddressLookupTableAccount[];
    memo?: string;
    signers?: Signer[];
    sendOptions?: SendOptions;
}): Promise<TransactionSignature>;
